// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/dsbasko/pass-keeper/internal/server/endpoint/grpc/servers (interfaces: AuthMutator)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/auth-mutator.go -package=grpc_mock github.com/dsbasko/pass-keeper/internal/server/endpoint/grpc/servers AuthMutator
//

// Package grpc_mock is a generated GoMock package.
package grpc_mock

import (
	context "context"
	reflect "reflect"

	model "github.com/dsbasko/pass-keeper/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockAuthMutator is a mock of AuthMutator interface.
type MockAuthMutator struct {
	ctrl     *gomock.Controller
	recorder *MockAuthMutatorMockRecorder
}

// MockAuthMutatorMockRecorder is the mock recorder for MockAuthMutator.
type MockAuthMutatorMockRecorder struct {
	mock *MockAuthMutator
}

// NewMockAuthMutator creates a new mock instance.
func NewMockAuthMutator(ctrl *gomock.Controller) *MockAuthMutator {
	mock := &MockAuthMutator{ctrl: ctrl}
	mock.recorder = &MockAuthMutatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthMutator) EXPECT() *MockAuthMutatorMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockAuthMutator) CreateUser(arg0 context.Context, arg1, arg2 string) (model.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", arg0, arg1, arg2)
	ret0, _ := ret[0].(model.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockAuthMutatorMockRecorder) CreateUser(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockAuthMutator)(nil).CreateUser), arg0, arg1, arg2)
}
